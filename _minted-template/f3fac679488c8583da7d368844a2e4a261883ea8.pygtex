\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{k+kt}{int} \PYGdefault{n}{par}\PYGdefault{p}{[}\PYGdefault{n}{MAXN}\PYGdefault{p}{];}
\PYGdefault{k+kt}{void} \PYGdefault{n+nf}{init}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{N}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
    \PYGdefault{k}{for}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{i}\PYGdefault{o}{=}\PYGdefault{l+m+mi}{0}\PYGdefault{p}{;}\PYGdefault{n}{i}\PYGdefault{o}{\PYGdefaultZlt{}=}\PYGdefault{n}{N}\PYGdefault{p}{;}\PYGdefault{o}{++}\PYGdefault{n}{i}\PYGdefault{p}{)} \PYGdefault{n}{par}\PYGdefault{p}{[}\PYGdefault{n}{i}\PYGdefault{p}{]}\PYGdefault{o}{=}\PYGdefault{n}{i}\PYGdefault{p}{;}
\PYGdefault{p}{\PYGdefaultZcb{}}
\PYGdefault{k+kt}{int} \PYGdefault{n+nf}{find}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{x}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
    \PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{n}{par}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]}\PYGdefault{o}{==}\PYGdefault{n}{x}\PYGdefault{p}{)} \PYGdefault{k}{return} \PYGdefault{n}{x}\PYGdefault{p}{;}
    \PYGdefault{k}{return} \PYGdefault{n}{par}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]}\PYGdefault{o}{=}\PYGdefault{n}{find}\PYGdefault{p}{(}\PYGdefault{n}{par}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]);}
\PYGdefault{p}{\PYGdefaultZcb{}}
\PYGdefault{k+kt}{void} \PYGdefault{n+nf}{uni}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{A}\PYGdefault{p}{,}\PYGdefault{k+kt}{int} \PYGdefault{n}{B}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
    \PYGdefault{k+kt}{int} \PYGdefault{n}{x}\PYGdefault{o}{=}\PYGdefault{n}{find}\PYGdefault{p}{(}\PYGdefault{n}{A}\PYGdefault{p}{),}\PYGdefault{n}{y}\PYGdefault{o}{=}\PYGdefault{n}{find}\PYGdefault{p}{(}\PYGdefault{n}{B}\PYGdefault{p}{);}
    \PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{n}{x}\PYGdefault{o}{==}\PYGdefault{n}{y}\PYGdefault{p}{)} \PYGdefault{k}{return} \PYGdefault{p}{;}
    \PYGdefault{n}{par}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]}\PYGdefault{o}{=}\PYGdefault{n}{y}\PYGdefault{p}{;}
\PYGdefault{p}{\PYGdefaultZcb{}}
\PYGdefault{k+kt}{bool} \PYGdefault{n+nf}{same}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{A}\PYGdefault{p}{,}\PYGdefault{k+kt}{int} \PYGdefault{n}{B}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
    \PYGdefault{k}{return} \PYGdefault{n}{find}\PYGdefault{p}{(}\PYGdefault{n}{A}\PYGdefault{p}{)}\PYGdefault{o}{==}\PYGdefault{n}{find}\PYGdefault{p}{(}\PYGdefault{n}{B}\PYGdefault{p}{);}
\PYGdefault{p}{\PYGdefaultZcb{}}
\PYGdefault{c+c1}{//按秩合并}
\PYGdefault{k+kt}{void} \PYGdefault{n+nf}{unite}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{x}\PYGdefault{p}{,}\PYGdefault{k+kt}{int} \PYGdefault{n}{y}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
    \PYGdefault{n}{x}\PYGdefault{o}{=}\PYGdefault{n}{find}\PYGdefault{p}{(}\PYGdefault{n}{x}\PYGdefault{p}{),}\PYGdefault{n}{y}\PYGdefault{o}{=}\PYGdefault{n}{find}\PYGdefault{p}{(}\PYGdefault{n}{y}\PYGdefault{p}{);}
    \PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{n}{x}\PYGdefault{o}{==}\PYGdefault{n}{y}\PYGdefault{p}{)} \PYGdefault{k}{return} \PYGdefault{p}{;}
    \PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{n}{rank}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{rank}\PYGdefault{p}{[}\PYGdefault{n}{y}\PYGdefault{p}{])}
        \PYGdefault{n}{parent}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]}\PYGdefault{o}{=}\PYGdefault{n}{y}\PYGdefault{p}{;}  \PYGdefault{c+c1}{// 从rank小的向rank大的连边}
    \PYGdefault{k}{else}
    \PYGdefault{p}{\PYGdefaultZob{}}
        \PYGdefault{n}{parent}\PYGdefault{p}{[}\PYGdefault{n}{y}\PYGdefault{p}{]}\PYGdefault{o}{=}\PYGdefault{n}{x}\PYGdefault{p}{;}
        \PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{n}{rank}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]}\PYGdefault{o}{==}\PYGdefault{n}{rank}\PYGdefault{p}{[}\PYGdefault{n}{y}\PYGdefault{p}{])} \PYGdefault{n}{rank}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]}\PYGdefault{o}{++}\PYGdefault{p}{;}
    \PYGdefault{p}{\PYGdefaultZcb{}}
\PYGdefault{p}{\PYGdefaultZcb{}}
\PYGdefault{c+c1}{//非递归路径压缩（避免栈溢出RE）}
\PYGdefault{k+kt}{int} \PYGdefault{n+nf}{find}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{x}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
    \PYGdefault{k+kt}{int} \PYGdefault{n}{k}\PYGdefault{p}{,} \PYGdefault{n}{j}\PYGdefault{p}{,} \PYGdefault{n}{r}\PYGdefault{p}{;}
    \PYGdefault{n}{r} \PYGdefault{o}{=} \PYGdefault{n}{x}\PYGdefault{p}{;}
    \PYGdefault{k}{while}\PYGdefault{p}{(}\PYGdefault{n}{r} \PYGdefault{o}{!=} \PYGdefault{n}{parent}\PYGdefault{p}{[}\PYGdefault{n}{r}\PYGdefault{p}{])}     \PYGdefault{c+c1}{//查找跟节点}
        \PYGdefault{n}{r} \PYGdefault{o}{=} \PYGdefault{n}{parent}\PYGdefault{p}{[}\PYGdefault{n}{r}\PYGdefault{p}{];}        \PYGdefault{c+c1}{//找到跟节点，用r记录下}
    \PYGdefault{n}{k} \PYGdefault{o}{=} \PYGdefault{n}{x}\PYGdefault{p}{;}
    \PYGdefault{k}{while}\PYGdefault{p}{(}\PYGdefault{n}{k} \PYGdefault{o}{!=} \PYGdefault{n}{r}\PYGdefault{p}{)}             \PYGdefault{c+c1}{//非递归路径压缩操作}
    \PYGdefault{p}{\PYGdefaultZob{}}
        \PYGdefault{n}{j} \PYGdefault{o}{=} \PYGdefault{n}{parent}\PYGdefault{p}{[}\PYGdefault{n}{k}\PYGdefault{p}{];}        \PYGdefault{c+c1}{//用j暂存parent[k]的父节点}
        \PYGdefault{n}{parent}\PYGdefault{p}{[}\PYGdefault{n}{k}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{n}{r}\PYGdefault{p}{;}        \PYGdefault{c+c1}{//parent[x]指向跟节点}
        \PYGdefault{n}{k} \PYGdefault{o}{=} \PYGdefault{n}{j}\PYGdefault{p}{;}                \PYGdefault{c+c1}{//k移到父节点}
    \PYGdefault{p}{\PYGdefaultZcb{}}
    \PYGdefault{k}{return} \PYGdefault{n}{r}\PYGdefault{p}{;}                 \PYGdefault{c+c1}{//返回根节点的值}
\PYGdefault{p}{\PYGdefaultZcb{}}
\end{Verbatim}
