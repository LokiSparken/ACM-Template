\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/*一、set}
\PYG{c+cm}{set和multiset用法一样，multiset允许重复元素}
\PYG{c+cm}{利用set从大到小排序（自定义排序函数）*/}
\PYG{k}{struct} \PYG{n}{classcmp}
\PYG{p}{\PYGZob{}}
    \PYG{k+kt}{bool} \PYG{k}{operator}\PYG{p}{()(}\PYG{k}{const} \PYG{k+kt}{int} \PYG{o}{\PYGZam{}}\PYG{n}{lhs}\PYG{p}{,}\PYG{k}{const} \PYG{k+kt}{int} \PYG{o}{\PYGZam{}}\PYG{n}{rhs}\PYG{p}{)}\PYG{k}{const}
    \PYG{p}{\PYGZob{}}\PYG{k}{return} \PYG{n}{lhs}\PYG{o}{\PYGZgt{}}\PYG{n}{rhs}\PYG{p}{;\PYGZcb{}}
\PYG{p}{\PYGZcb{};}
\PYG{n}{multiset}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{n}{classcmp}\PYG{o}{\PYGZgt{}} \PYG{n}{s}\PYG{p}{;}
\PYG{c+c1}{// 结构体自定义排序函数}
\PYG{k}{struct} \PYG{n}{Node} \PYG{p}{\PYGZob{}} \PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{y}\PYG{p}{;} \PYG{p}{\PYGZcb{};}
\PYG{k}{struct} \PYG{n}{classcmp}
\PYG{p}{\PYGZob{}}
    \PYG{k+kt}{bool} \PYG{k}{operator}\PYG{p}{()(}\PYG{k}{const} \PYG{n}{Node} \PYG{o}{\PYGZam{}}\PYG{n}{a}\PYG{p}{,}\PYG{k}{const} \PYG{n}{Node} \PYG{o}{\PYGZam{}}\PYG{n}{b}\PYG{p}{)}\PYG{k}{const}
    \PYG{p}{\PYGZob{}}
        \PYG{k}{if}\PYG{p}{(}\PYG{n}{a}\PYG{p}{.}\PYG{n}{x}\PYG{o}{!=}\PYG{n}{b}\PYG{p}{.}\PYG{n}{x}\PYG{p}{)} \PYG{k}{return} \PYG{n}{a}\PYG{p}{.}\PYG{n}{x}\PYG{o}{\PYGZlt{}}\PYG{n}{b}\PYG{p}{.}\PYG{n}{x}\PYG{p}{;}
        \PYG{k}{else} \PYG{k}{return} \PYG{n}{a}\PYG{p}{.}\PYG{n}{y}\PYG{o}{\PYGZgt{}}\PYG{n}{b}\PYG{p}{.}\PYG{n}{y}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}\PYG{c+c1}{// 按x从小到大，按y从大到小}
\PYG{p}{\PYGZcb{};}
\PYG{n}{multiset}\PYG{o}{\PYGZlt{}}\PYG{n}{Node}\PYG{p}{,}\PYG{n}{classcmp}\PYG{o}{\PYGZgt{}} \PYG{n}{s}\PYG{p}{;}
\PYG{n}{multiset}\PYG{o}{\PYGZlt{}}\PYG{n}{Node}\PYG{p}{,}\PYG{n}{classcmp}\PYG{o}{\PYGZgt{}::}\PYG{n}{iterator} \PYG{n}{it}\PYG{p}{;}\PYG{c+c1}{// 若定义迭代器也要带排序函数}
\PYG{c+c1}{// 函数}
\PYG{n}{erase}\PYG{p}{()}\PYG{c+c1}{// 删除元素（参数为元素值或迭代器，multi会删光值的每一个）}
\PYG{n}{lower\PYGZus{}bound}\PYG{p}{()}\PYG{c+c1}{// 返回指向大于（或等于）某值的第一个元素的迭代器}
\PYG{n}{upper\PYGZus{}bound}\PYG{p}{()}\PYG{c+c1}{// 返回大于某个值元素的迭代器}
\PYG{n}{equal\PYGZus{}range}\PYG{p}{()}\PYG{c+c1}{// 返回集合中与给定值相等的上下限两个迭代器}

\PYG{c+c1}{// 二、string}
\PYG{n}{s1}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{n}{s2}\PYG{p}{);}
\PYG{n}{s1}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{n}{s2}\PYG{p}{,}\PYG{n}{lenth}\PYG{p}{);}
\PYG{n}{s1}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{n}{s2}\PYG{p}{,}\PYG{n}{start}\PYG{p}{,}\PYG{n}{lenth}\PYG{p}{);}
\PYG{n}{s1}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{n}{times}\PYG{p}{,}\PYG{n}{char1}\PYG{p}{);}
\PYG{n}{s1}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{n}{start}\PYG{p}{,}\PYG{n}{end}\PYG{p}{);}
\PYG{n}{s1}\PYG{p}{.}\PYG{n}{at}\PYG{p}{(}\PYG{n}{pos}\PYG{p}{);}
\end{Verbatim}
